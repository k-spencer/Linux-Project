#!/bin/sh
validateInput()  {
   case "$1" in
   
   1 ) if [[( "$2"  =~ ^[A-Za-z\ ]+$)]]; then
          return 0
       else       
          printf "Invalid input: Please enter a valid name\n"
       return 1
       fi ;;
   2 ) if [[( "$2" =~ ^[A-Za-z0-9\ ]+$)]]; then
          return "$?"
       else
          printf "Invalid input Please enter a valid address\n"
          return 1
       fi ;;

   3 ) if [[( "$2" =~ ^[0-9]+$)]] && [[ ${#2} == 10 ]]; then
          return 0
       else
          printf "Invalid input: Please enter a valid 10 digit phone number\n"
          return 1
       fi ;;

   4 )  if [[( "$2" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9]+$)]]; then
             return 0
        else
             printf "Invalid input. Please enter a valid email\n"
             return 1
        fi ;;
   esac 
}

setup() {
   while IFS= read -r line
   do
      array+=("$line")
   done < "db.txt"
}

dbwrite() { 
   vizSave 
   printf "%s\n" "${array[@]}" > db.txt
}

contactOptions() {
   read -r -p  "
1) Update Record
2) Delete Record
3) Exit
> " input

case "$input" in 
1 ) clear
    getUpdateField "$1" ;;
2 ) deleteRecord "$1" ;;
3 ) clear
    displayMenu ;;
* ) clear
    printf "\n\n***INVALID INPUT****\n\n"
    displayContact "$1"
    contactOptions "$1" ;;
esac     
}

menuController() {
   operation=""
   case "$1" in
   a|A ) clear
         searchMenu ;;
   b|B ) getEntryData ;;
   c|C ) clear
         operation="update"
         printf "\n\nSearch record to update"
         searchMenu ;;
   d|D ) clear 
         operation="remove"
         printf "\n\nSearch record to remove"
         searchMenu ;;
   e|E ) dbwrite 
         exit;;
   * ) clear
       printf "\n***INVALID INPUT***"
       displayMenu ;;
   esac
}
